- platform: tcp
  name: uaqua_1
  host: !secret microAQUA_1_IP 
  port: !secret microAQUA_1_port
  payload: !secret microAQUA_1_payload
  timeout: 3
  scan_interval: 1
  value_template:  "{{ value.split('=')[1]}}"
  
#---------------------------------------------------#
#           microAQUA 2'nd DEVICE SECTION           #
#---------------------------------------------------#
#                                                   #
#     uncomment code in this section to add 2'nd    #
#           microAQUA device to the system          #
#                                                   #
#       To do this ,select configuration code       #
#       in this section and press 'Ctrl' + '/'      #
#---------------------------------------------------#
# - platform: tcp
#   name: uaqua_2
#   host: !secret microAQUA_2_IP 
#   port: !secret microAQUA_2_port
#   payload: !secret microAQUA_2_payload
#   timeout: 3
#   scan_interval: 1
#   value_template:  "{{ value.split('=')[1]}}"
#---------------------------------------------------#
#        END microAQUA 2'nd DEVICE SECTION          #
#---------------------------------------------------#
  
#---------------------------------------------------#
#           microAQUA 3'rd DEVICE SECTION           #
#---------------------------------------------------#
#                                                   #
#     uncomment code in this section to add 3'rd    #
#           microAQUA device to the system          #
#                                                   #
#       To do this ,select configuration code       #
#       in this section and press 'Ctrl' + '/'      #
#---------------------------------------------------#
# - platform: tcp
#   name: uaqua_3
#   host: !secret microAQUA_3_IP 
#   port: !secret microAQUA_3_port
#   payload: !secret microAQUA_3_payload
#   timeout: 3
#   scan_interval: 1
#   value_template:  "{{ value.split('=')[1]}}"

        
- platform: template
  sensors:
    uaqua_1_ph:
      unique_id: 'microAQUA_1_pH'
      friendly_name:  pH sensor
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
         {% if ((states('sensor.uaqua_1_last_update')|int)<15) %}
            {{(states('sensor.uaqua_1').split(';')[0]|float /100) | round (2)}}
         {% else %} unknown {% endif %}
        {% else %}
         {{states('sensor.uaqua_1')}}
        {% endif %}
      unit_of_measurement: "pH"
      icon_template: 'mdi:thermometer-probe'

    uaqua_1_temp1:
      unique_id: 'microAQUA_1_Temp1'
      friendly_name:  Czujnik Temperatury 1
      icon_template: 'mdi:thermometer'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}  
            {% if (states('sensor.uaqua_1').split(';')[1]=='???')  %}
              --,- °C
            {% else %} {{states('sensor.uaqua_1').split(';')[1] | float / 10}} °C {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
            {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_temp2:
      unique_id: 'microAQUA_1_Temp2'
      friendly_name:  Czujnik Temperatury 2
      icon_template: 'mdi:thermometer'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[2]=='???')  %}
              --,- °C
            {% else %} {{states('sensor.uaqua_1').split(';')[2] | float / 10}} °C {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_temp3:
      unique_id: 'microAQUA_1_Temp3'
      friendly_name:  Czujnik Temperatury 3
      icon_template: 'mdi:thermometer'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[3]=='???')  %}
              --,- °C
            {% else %} {{states('sensor.uaqua_1').split(';')[3] | float / 10}} °C {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_temp4:
      unique_id: 'microAQUA_1_Temp4'
      friendly_name:  Czujnik Temperatury 4
      icon_template: 'mdi:thermometer'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[4]=='???')  %}
              --,- °C
            {% else %} {{states('sensor.uaqua_1').split(';')[4] | float / 10 }} °C {% endif %}
          {% else %} unknown {% endif %}  
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %} 

    uaqua_1_co2_socket:
      unique_id: 'microAQUA_1_co2_socket'
      friendly_name: Zawór CO2
      icon_template: 'mdi:pipe-valve'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[17]=='0') %}
              {% if (states('sensor.uaqua_1').split(';')[9]=='7')  %}
                brak przypisanego gniazda
              {% else %}
                {% if (states('sensor.uaqua_1').split(';')[10]=='0')  %}
                  off
                {% else %}  
                  on
                {% endif %}
             {% endif %}
            {% else %}
                off
            {% endif %}
          {% else %} unknown {% endif %}  
        {% else %}
          {{ states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_o2_socket:
      unique_id: 'microAQUA_1_o2_socket'
      friendly_name: Zawór O2
      icon_template: 'mdi:pipe-valve'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[17]=='0') %}
                {% if (states('sensor.uaqua_1').split(';')[11]=='7')  %}
                  brak przypisanego gniazda
                {% else %}
                  {% if (states('sensor.uaqua_1').split(';')[12]=='0')  %}
                    off
                  {% else %}  
                    on
                  {% endif %}
                {% endif %}  
            {% else %}
              off
            {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
        
    uaqua_1_termoreg_socket:
      unique_id: 'microAQUA_1_termoreg_socket'
      friendly_name: Grzałka
      icon_template: 'mdi:power-socket-eu'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[17]=='0') %}
              {% if (states('sensor.uaqua_1').split(';')[7]=='7')  %}
                brak przypisanego gniazda
              {% else %}
                {% if (states('sensor.uaqua_1').split(';')[8]=='0')  %}
                  off
                {% else %}  
                  on
                {% endif %}
              {% endif %}
            {% else %}
                off
            {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_fan_controller:
      unique_id: 'microAQUA_1_FAN_controller'
      friendly_name: Wentylator
      icon_template: 'mdi:fan'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {% if (states('sensor.uaqua_1').split(';')[17]=='0') %}
              {% if (states('sensor.uaqua_1').split(';')[5]=='3')  %}
                  Moduł FAN wyłączony
              {%elif (states('sensor.uaqua_1').split(';')[5]=='2')  %}
                  {% if (states('sensor.uaqua_1').split(';')[6]=='0')  %}
                     Praca okresowa: Stan OFF
                  {% else %}
                    Praca okresowa: Stan ON
                  {% endif %}
              {%elif (states('sensor.uaqua_1').split(';')[5]=='1')  %}
                  {% if (states('sensor.uaqua_1').split(';')[6]=='1')  %}
                    Regulacja mocy: Rozruch
                  {% elif (states('sensor.uaqua_1').split(';')[6]=='2')  %}
                     Regulacja mocy: 20%
                  {% elif (states('sensor.uaqua_1').split(';')[6]=='3')  %}
                     Regulacja mocy: 40%
                  {% elif (states('sensor.uaqua_1').split(';')[6]=='4')  %}
                     Regulacja mocy: 60%
                  {% elif (states('sensor.uaqua_1').split(';')[6]=='5')  %}
                     Regulacja mocy: 80%
                  {% elif (states('sensor.uaqua_1').split(';')[6]=='6')  %}
                     Regulacja mocy: 100%
                  {% else %}
                     Regulacja mocy: OFF
                  {% endif %}
              {% else %}
                  {% if (states('sensor.uaqua_1').split(';')[6]=='0')  %}
                    Praca ON/OFF: Stan OFF
                  {% else %}
                    Praca ON/OFF: Stan ON
                  {% endif %}
              {% endif %}
            {% else %}
              off
            {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
        

    uaqua_1_led_1:
      unique_id: 'microAQUA_1_LED_1_controller'
      friendly_name: LED 1
      icon_template: 'mdi:led-on'      
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %} 
            {{states('sensor.uaqua_1').split(';')[13]}}
          {% else %} unknown {% endif %} 
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
      unit_of_measurement: "%"      

    uaqua_1_led_2:
      unique_id: 'microAQUA_1_LED_2_controller'
      friendly_name: LED 2
      icon_template: 'mdi:led-on'      
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}
            {{states('sensor.uaqua_1').split(';')[14]}}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %} 
      unit_of_measurement: "%"      

    uaqua_1_led_3:
      unique_id: 'microAQUA_1_LED_3_controller'
      friendly_name: LED 3
      icon_template: 'mdi:led-on'      
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}
            {{states('sensor.uaqua_1').split(';')[15]}}
          {% else %} unknown {% endif %}  
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
      unit_of_measurement: "%"      

    uaqua_1_led_4:
      unique_id: 'microAQUA_1_LED_4_controller'
      friendly_name: LED 4
      icon_template: 'mdi:led-on'      
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}
            {{states('sensor.uaqua_1').split(';')[16]}}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
      unit_of_measurement: "%"
        

    uaqua_1_temp_alarms:
      unique_id: 'microAQUA_1_temp_alarms'
      friendly_name: Alarm Temp min/max
      icon_template: 'mdi:thermometer-alert'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}
            {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(1))==1) %}
              {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(128))==128) %}
                ALARM Temp MIN wyciszony
              {% else %}
                ALARM Temp MIN
              {% endif %}
            {% elif (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(2))==2) %}
              {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(128))==128) %}
                ALARM Temp MAX wyciszony
              {% else %}
                ALARM Temp MIN
              {% endif %}
            {% else %}
              ---
            {% endif %}
          {% else %} unknown {% endif %}  
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_ph_alarms:
      unique_id: 'microAQUA_1_pH_alarms'
      friendly_name: Alarm pH min/max
      icon_template: 'mdi:alert'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}
            {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(4))==4) %}
              {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(128))==128) %}
                ALARM pH MIN wyciszony
              {% else %}
                ALARM pH MIN
              {% endif %}
            {% elif (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(8))==8) %}
              {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(128))==128) %}
                ALARM pH MAX wyciszony
              {% else %}
                ALARM pH MAX
              {% endif %}
            {% else %}
              ---
            {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
    uaqua_1_acustic_alarm:
      unique_id: 'microAQUA_1 acoustic alarm'
      friendly_name: Alarm Dźwiękowy Status
      icon_template: 'mdi:volume-high'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(127))!=0) %}
            {% if (((states('sensor.uaqua_1').split(';')[18]) |int |bitwise_and(128))==128) %}
              OFF
            {% else %}
              ON
            {% endif %}    
          {% else %}
            OFF
          {% endif %}
        {% else %}
            {{states('sensor.uaqua_1')}}
        {% endif %}

    uaqua_1_temp_alarm_min_value:
      unique_id: 'microAQUA_1_temp_alarm_min_value'
      friendly_name: Alarm Temp. min. value
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}  
            {% if (states('sensor.uaqua_1').split(';')[20]=='???')  %}
              --,- °C
            {% else %} 
              {{(states('sensor.uaqua_1').split(';')[20] | float / 10)}} +/- {{ (states('sensor.uaqua_1').split(';')[22] | float / 10) }} °C
            {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
            {{states('sensor.uaqua_1')}}
        {% endif %}
      icon_template: 'mdi:thermometer-alert' 

    uaqua_1_temp_alarm_max_value:
      unique_id: 'microAQUA_1_temp_alarm_max_value'
      friendly_name: Alarm Temp. max. value
      value_template: >
        {% if states('sensor.uaqua_1') != 'unknown' %}
          {% if states('sensor.uaqua_1_last_update')|int < 15 %}  
            {% if states('sensor.uaqua_1').split(';')[21] == '???' %}
              --,- °C
            {% else %}
              {{ (states('sensor.uaqua_1').split(';')[21] | float / 10) }} +/- {{ (states('sensor.uaqua_1').split(';')[22] | float / 10) }} °C
            {% endif %}
          {% else %}
            unknown
          {% endif %}
        {% else %}
          {{ states('sensor.uaqua_1') }}
        {% endif %}
      icon_template: 'mdi:thermometer-alert' 


    uaqua_1_ph_alarm_min_value:
      unique_id: 'microAQUA_1_pH_alarm_min_value'
      friendly_name: Alarn pH min. value
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}  
            {% if (states('sensor.uaqua_1').split(';')[23]=='???')  %}
              -,-- pH
            {% else %} {{(states('sensor.uaqua_1').split(';')[23] | float / 100)}} +/-{{(states('sensor.uaqua_1').split(';')[25] | float / 100)}} pH {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
            {{states('sensor.uaqua_1')}}
        {% endif %}
      icon_template: 'mdi:alert' 

    uaqua_1_ph_alarm_max_value:
      unique_id: 'microAQUA_1_pH_alarm_max_value'
      friendly_name: Alarm pH max. value
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1_last_update')|int)<15 ) %}  
            {% if (states('sensor.uaqua_1').split(';')[24]=='???')  %}
              -,-- pH
            {% else %} {{(states('sensor.uaqua_1').split(';')[24] | float / 100)}} +/-{{(states('sensor.uaqua_1').split(';')[25] | float / 100)}} pH {% endif %}
          {% else %} unknown {% endif %}
        {% else %}
            {{states('sensor.uaqua_1')}}
        {% endif %}
      icon_template: 'mdi:alert' 

    uaqua_1_time_stamp:
      unique_id: 'microAQUA_1_data_update_time_stamp'
      friendly_name: Czas ostatniego pomiaru
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {{states('sensor.uaqua_1').split(';')[19] }}
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
      icon_template: 'mdi:clock' 
      
    uaqua_1_last_update:
      unique_id: 'microAQUA_1_last_changed'
      friendly_name: ostatni update sensorow
      value_template: "{{ (as_timestamp(now())-as_timestamp(states.sensor.uaqua_1_time_stamp.last_updated))|float |round(0) }}"
      
    uaqua_1_no_reg_time:
      unique_id: 'microAQUA_1_no_reg_time'
      friendly_name: Czas bez regulacji
      icon_template: 'mdi:power-plug-off'
      value_template: >
        {% if (states('sensor.uaqua_1')!= 'unknown') %}
          {% if ((states('sensor.uaqua_1').split(';')[17]) == '0') %}
            --
          {% else %}
            {{states('sensor.uaqua_1').split(';')[17]}}min
          {% endif %} 
        {% else %}
          {{states('sensor.uaqua_1')}}
        {% endif %}
#---------------------------------------------------#
#           microAQUA 2'nd DEVICE SECTION           #
#---------------------------------------------------#
#                                                   #
#     uncomment code in this section to add 2'nd    #
#           microAQUA device to the system          #
#                                                   #
#       To do this ,select configuration code       #
#       in this section and press 'Ctrl' + '/'      #
#---------------------------------------------------#
#     uaqua_2_ph:
#       unique_id: 'microAQUA_2_pH'
#       friendly_name:  pH sensor
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15) %}
#             {{(states('sensor.uaqua_2').split(';')[0]|float /100) | round (2)}}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "pH"
#       icon_template: 'hass:raspberry-pi'

#     uaqua_2_temp1:
#       unique_id: 'microAQUA_2_Temp1'
#       friendly_name:  Czujnik Temperatury 1
#       icon_template: 'hass:thermometer'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}  
#             {% if (states('sensor.uaqua_2').split(';')[1]=='???')  %}
#               --,-
#             {% else %} {{states('sensor.uaqua_2').split(';')[1] | float / 10}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#             {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "°C"

#     uaqua_2_temp2:
#       unique_id: 'microAQUA_2_Temp2'
#       friendly_name:  Czujnik Temperatury 2
#       icon_template: 'hass:thermometer'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[2]=='???')  %}
#               --,-
#             {% else %} {{states('sensor.uaqua_2').split(';')[2] | float / 10}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "°C"

#     uaqua_2_temp3:
#       unique_id: 'microAQUA_2_Temp3'
#       friendly_name:  Czujnik Temperatury 3
#       icon_template: 'hass:thermometer'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[3]=='???')  %}
#               --,-
#             {% else %} {{states('sensor.uaqua_2').split(';')[3] | float / 10}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: " °C"

#     uaqua_2_temp4:
#       unique_id: 'microAQUA_2_Temp4'
#       friendly_name:  Czujnik Temperatury 4
#       icon_template: 'hass:thermometer'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[4]=='???')  %}
#               --,-
#             {% else %} {{states('sensor.uaqua_2').split(';')[4] | float / 10 }} {% endif %}
#           {% else %} unknown {% endif %}  
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %} 
#       unit_of_measurement: " °C"
      
#     uaqua_2_co2_socket:
#       unique_id: 'microAQUA_2_co2_socket'
#       friendly_name: Zawór CO2
#       icon_template: 'hass:power-socket-eu'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[17]=='0') %}
#               {% if (states('sensor.uaqua_2').split(';')[9]=='7')  %}
#                 brak przypisanego gniazda
#               {% else %}
#                 {% if (states('sensor.uaqua_2').split(';')[10]=='0')  %}
#                   off
#                 {% else %}  
#                   on
#                 {% endif %}
#              {% endif %}
#             {% else %}
#                 off
#             {% endif %}
#           {% else %} unknown {% endif %}  
#         {% else %}
#           {{ states('sensor.uaqua_2')}}
#         {% endif %}
        
#     uaqua_2_o2_socket:
#       unique_id: 'microAQUA_2_o2_socket'
#       friendly_name: Zawór O2
#       icon_template: 'hass:power-socket-eu'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[17]=='0') %}
#                 {% if (states('sensor.uaqua_2').split(';')[11]=='7')  %}
#                   brak przypisanego gniazda
#                 {% else %}
#                   {% if (states('sensor.uaqua_2').split(';')[12]=='0')  %}
#                     off
#                   {% else %}  
#                     on
#                   {% endif %}
#                 {% endif %}  
#             {% else %}
#               off
#             {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
        

#     uaqua_2_termoreg_socket:
#       unique_id: 'microAQUA_2_termoreg_socket'
#       friendly_name: Grzałka
#       icon_template: 'hass:power-socket-eu'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[17]=='0') %}
#               {% if (states('sensor.uaqua_2').split(';')[7]=='7')  %}
#                 brak przypisanego gniazda
#               {% else %}
#                 {% if (states('sensor.uaqua_2').split(';')[8]=='0')  %}
#                   off
#                 {% else %}  
#                   on
#                 {% endif %}
#               {% endif %}
#             {% else %}
#                 off
#             {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
        

#     uaqua_2_fan_controller:
#       unique_id: 'microAQUA_2_FAN_controller'
#       friendly_name: Wentylator
#       icon_template: 'hass:fan'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {% if (states('sensor.uaqua_2').split(';')[17]=='0') %}
#               {% if (states('sensor.uaqua_2').split(';')[5]=='3')  %}
#                   Moduł FAN wyłączony
#               {%elif (states('sensor.uaqua_2').split(';')[5]=='2')  %}
#                   {% if (states('sensor.uaqua_2').split(';')[6]=='0')  %}
#                      Praca okresowa: Stan OFF
#                   {% else %}
#                     Praca okresowa: Stan ON
#                   {% endif %}
#               {%elif (states('sensor.uaqua_2').split(';')[5]=='1')  %}
#                   {% if (states('sensor.uaqua_2').split(';')[6]=='1')  %}
#                     Regulacja mocy: Rozruch
#                   {% elif (states('sensor.uaqua_2').split(';')[6]=='2')  %}
#                      Regulacja mocy: 20%
#                   {% elif (states('sensor.uaqua_2').split(';')[6]=='3')  %}
#                      Regulacja mocy: 40%
#                   {% elif (states('sensor.uaqua_2').split(';')[6]=='4')  %}
#                      Regulacja mocy: 60%
#                   {% elif (states('sensor.uaqua_2').split(';')[6]=='5')  %}
#                      Regulacja mocy: 80%
#                   {% elif (states('sensor.uaqua_2').split(';')[6]=='6')  %}
#                      Regulacja mocy: 100%
#                   {% else %}
#                      Regulacja mocy: OFF
#                   {% endif %}
#               {% else %}
#                   {% if (states('sensor.uaqua_2').split(';')[6]=='0')  %}
#                     Praca ON/OFF: Stan OFF
#                   {% else %}
#                     Praca ON/OFF: Stan ON
#                   {% endif %}
#               {% endif %}
#             {% else %}
#               off
#             {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}        

#     uaqua_2_led_1:
#       unique_id: 'microAQUA_2_LED_1_controller'
#       friendly_name: LED 1
#       icon_template: 'hass:led-on'      
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %} 
#             {{states('sensor.uaqua_2').split(';')[13]}}
#           {% else %} unknown {% endif %} 
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "%"
      

#     uaqua_2_led_2:
#       unique_id: 'microAQUA_2_LED_2_controller'
#       friendly_name: LED 2
#       icon_template: 'hass:led-on'      
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}
#             {{states('sensor.uaqua_2').split(';')[14]}}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %} 
#       unit_of_measurement: "%"
      

#     uaqua_2_led_3:
#       unique_id: 'microAQUA_2_LED_3_controller'
#       friendly_name: LED 3
#       icon_template: 'hass:led-on'      
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}
#             {{states('sensor.uaqua_2').split(';')[15]}}
#           {% else %} unknown {% endif %}  
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "%"
      

#     uaqua_2_led_4:
#       unique_id: 'microAQUA_2_LED_4_controller'
#       friendly_name: LED 4
#       icon_template: 'hass:led-on'      
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}
#             {{states('sensor.uaqua_2').split(';')[16]}}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       unit_of_measurement: "%"
        

#     uaqua_2_temp_alarms:
#       unique_id: 'microAQUA_2_temp_alarms'
#       friendly_name: Alarm Temp min/max
#       icon_template: 'hass:thermometer-alert'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}
#             {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(1))==1) %}
#               {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(128))==128) %}
#                 ALARM Temp MIN wyciszony
#               {% else %}
#                 ALARM Temp MIN
#               {% endif %}
#             {% elif (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(2))==2) %}
#               {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(128))==128) %}
#                 ALARM Temp MAX wyciszony
#               {% else %}
#                 ALARM Temp MIN
#               {% endif %}
#             {% else %}
#               ---
#             {% endif %}
#           {% else %} unknown {% endif %}  
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}   

#     uaqua_2_ph_alarms:
#       unique_id: 'microAQUA_2_pH_alarms'
#       friendly_name: Alarm pH min/max
#       icon_template: 'hass:alert'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}
#             {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(4))==4) %}
#               {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(128))==128) %}
#                 ALARM pH MIN wyciszony
#               {% else %}
#                 ALARM pH MIN
#               {% endif %}
#             {% elif (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(8))==8) %}
#               {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(128))==128) %}
#                 ALARM pH MAX wyciszony
#               {% else %}
#                 ALARM pH MAX
#               {% endif %}
#             {% else %}
#               ---
#             {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}    
            
#     uaqua_2_acustic_alarm_status:
#       unique_id: 'microAQUA_2 acoustic alarm status'
#       friendly_name: Alarm Dźwiękowy Status
#       icon_template: 'hass:volume-high'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(127))!=0) %}
#             {% if (((states('sensor.uaqua_2').split(';')[18]) |int |bitwise_and(128))==128) %}
#               OFF
#             {% else %}
#               ON
#             {% endif %}    
#           {% else %}
#             OFF
#           {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %} 
#     uaqua_2_temp_alarm_min_value:
#       unique_id: 'microAQUA_2_temp_alarm_min_value'
#       friendly_name: Alarm Temp. min. value
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}  
#             {% if (states('sensor.uaqua_2').split(';')[20]=='???')  %}
#               --,- 
#             {% else %} {{(states('sensor.uaqua_2').split(';')[20] | float / 10)}} +/-{{(states('sensor.uaqua_2').split(';')[22] | float / 10)}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#             {{states('sensor.uaqua_2')}}
#         {% endif %}
#       icon_template: 'hass:thermometer-alert' 
#       unit_of_measurement: " °C"

#     uaqua_2_temp_alarm_max_value:
#       unique_id: 'microAQUA_2_temp_alarm_max_value'
#       friendly_name: Alarm Temp. max. value
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}  
#             {% if (states('sensor.uaqua_2').split(';')[21]=='???')  %}
#               --,- 
#             {% else %} {{(states('sensor.uaqua_2').split(';')[21] | float / 10)}} +/-{{(states('sensor.uaqua_2').split(';')[22] | float / 10)}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#             {{states('sensor.uaqua_2')}}
#         {% endif %}
#       icon_template: 'hass:thermometer-alert' 
#       unit_of_measurement: " °C"

#     uaqua_2_ph_alarm_min_value:
#       unique_id: 'microAQUA_2_pH_alarm_min_value'
#       friendly_name: Alarn pH min. value
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}  
#             {% if (states('sensor.uaqua_2').split(';')[23]=='???')  %}
#               -,-- 
#             {% else %} {{(states('sensor.uaqua_2').split(';')[23] | float / 100)}} +/-{{(states('sensor.uaqua_2').split(';')[25] | float / 100)}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#             {{states('sensor.uaqua_2')}}
#         {% endif %}
#       icon_template: 'hass:alert' 
#       unit_of_measurement: " pH"

#     uaqua_2_ph_alarm_max_value:
#       unique_id: 'microAQUA_2_pH_alarm_max_value'
#       friendly_name: Alarm pH max. value
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if ((states('sensor.uaqua_2_last_update')|int)<15 ) %}  
#             {% if (states('sensor.uaqua_2').split(';')[24]=='???')  %}
#               -,-- 
#             {% else %} {{(states('sensor.uaqua_2').split(';')[24] | float / 100)}} +/-{{(states('sensor.uaqua_2').split(';')[25] | float / 100)}} {% endif %}
#           {% else %} unknown {% endif %}
#         {% else %}
#             {{states('sensor.uaqua_2')}}
#         {% endif %}
#       icon_template: 'hass:alert' 
#       unit_of_measurement: " pH"

#     uaqua_2_time_stamp:
#       unique_id: 'microAQUA_2_data_update_time_stamp'
#       friendly_name: Czas ostatniego pomiaru
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {{states('sensor.uaqua_2').split(';')[19] }}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#       icon_template: 'hass:clock' 
      
#     uaqua_2_last_update:
#       unique_id: 'microAQUA_2_last_changed'
#       friendly_name: ostatni update sensorow
#       value_template: "{{ (as_timestamp(now())-as_timestamp(states.sensor.uaqua_2_time_stamp.last_updated))|float |round(0) }}"
      
#     uaqua_2_no_reg_time:
#       unique_id: 'microAQUA_2_no_reg_time'
#       friendly_name: Czas bez regulacji
#       icon_template: 'hass:power-plug-off'
#       value_template: >
#         {% if (states('sensor.uaqua_2')!= 'unknown') %}
#           {% if (states('sensor.uaqua_2').split(';')[17]== '0') %}
#             --
#           {% else %}
#             {{states('sensor.uaqua_2').split(';')[17]}}min
#           {% endif %}
#         {% else %}
#           {{states('sensor.uaqua_2')}}
#         {% endif %}
#---------------------------------------------------#
#        END microAQUA 2'nd DEVICE SECTION          #
#---------------------------------------------------#

#---------------------------------------------------#
#           microAQUA 3'rd DEVICE SECTION           #
#---------------------------------------------------#
#                                                   #
#     uncomment code in this section to add 3'rd    #
#           microAQUA device to the system          #
#                                                   #
#       To do this ,select configuration code       #
#       in this section and press 'Ctrl' + '/'      #
#---------------------------------------------------#
    # uaqua_3_ph:
    #   unique_id: 'microAQUA_3_pH'
    #   friendly_name:  pH sensor
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15) %}
    #         {{(states('sensor.uaqua_3').split(';')[0]|float /100) | round (2)}}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "pH"
    #   icon_template: 'hass:raspberry-pi'

    # uaqua_3_temp1:
    #   unique_id: 'microAQUA_3_Temp1'
    #   friendly_name:  Czujnik Temperatury 1
    #   icon_template: 'hass:thermometer'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}  
    #         {% if (states('sensor.uaqua_3').split(';')[1]=='???')  %}
    #           --,-
    #         {% else %} {{states('sensor.uaqua_3').split(';')[1] | float / 10}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #         {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "°C"

    # uaqua_3_temp2:
    #   unique_id: 'microAQUA_3_Temp2'
    #   friendly_name:  Czujnik Temperatury 2
    #   icon_template: 'hass:thermometer'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[2]=='???')  %}
    #           --,-
    #         {% else %} {{states('sensor.uaqua_3').split(';')[2] | float / 10}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "°C"

    # uaqua_3_temp3:
    #   unique_id: 'microAQUA_3_Temp3'
    #   friendly_name:  Czujnik Temperatury 3
    #   icon_template: 'hass:thermometer'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[3]=='???')  %}
    #           --,-
    #         {% else %} {{states('sensor.uaqua_3').split(';')[3] | float / 10}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: " °C"

    # uaqua_3_temp4:
    #   unique_id: 'microAQUA_3_Temp4'
    #   friendly_name:  Czujnik Temperatury 4
    #   icon_template: 'hass:thermometer'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[4]=='???')  %}
    #           --,-
    #         {% else %} {{states('sensor.uaqua_3').split(';')[4] | float / 10 }} {% endif %}
    #       {% else %} unknown {% endif %}  
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %} 
    #   unit_of_measurement: " °C"
      
    # uaqua_3_co2_socket:
    #   unique_id: 'microAQUA_3_co2_socket'
    #   friendly_name: Zawór CO2
    #   icon_template: 'hass:power-socket-eu'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[17]=='0') %}
    #           {% if (states('sensor.uaqua_3').split(';')[9]=='7')  %}
    #             brak przypisanego gniazda
    #           {% else %}
    #             {% if (states('sensor.uaqua_3').split(';')[10]=='0')  %}
    #               off
    #             {% else %}  
    #               on
    #             {% endif %}
    #          {% endif %}
    #         {% else %}
    #             off
    #         {% endif %}
    #       {% else %} unknown {% endif %}  
    #     {% else %}
    #       {{ states('sensor.uaqua_3')}}
    #     {% endif %}
        
    # uaqua_3_o2_socket:
    #   unique_id: 'microAQUA_3_o2_socket'
    #   friendly_name: Zawór O2
    #   icon_template: 'hass:power-socket-eu'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[17]=='0') %}
    #             {% if (states('sensor.uaqua_3').split(';')[11]=='7')  %}
    #               brak przypisanego gniazda
    #             {% else %}
    #               {% if (states('sensor.uaqua_3').split(';')[12]=='0')  %}
    #                 off
    #               {% else %}  
    #                 on
    #               {% endif %}
    #             {% endif %}  
    #         {% else %}
    #           off
    #         {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
        

    # uaqua_3_termoreg_socket:
    #   unique_id: 'microAQUA_3_termoreg_socket'
    #   friendly_name: Grzałka
    #   icon_template: 'hass:power-socket-eu'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[17]=='0') %}
    #           {% if (states('sensor.uaqua_3').split(';')[7]=='7')  %}
    #             brak przypisanego gniazda
    #           {% else %}
    #             {% if (states('sensor.uaqua_3').split(';')[8]=='0')  %}
    #               off
    #             {% else %}  
    #               on
    #             {% endif %}
    #           {% endif %}
    #         {% else %}
    #             off
    #         {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
        

    # uaqua_3_fan_controller:
    #   unique_id: 'microAQUA_3_FAN_controller'
    #   friendly_name: Wentylator
    #   icon_template: 'hass:fan'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {% if (states('sensor.uaqua_3').split(';')[17]=='0') %}
    #           {% if (states('sensor.uaqua_3').split(';')[5]=='3')  %}
    #               Moduł FAN wyłączony
    #           {%elif (states('sensor.uaqua_3').split(';')[5]=='2')  %}
    #               {% if (states('sensor.uaqua_3').split(';')[6]=='0')  %}
    #                  Praca okresowa: Stan OFF
    #               {% else %}
    #                 Praca okresowa: Stan ON
    #               {% endif %}
    #           {%elif (states('sensor.uaqua_3').split(';')[5]=='1')  %}
    #               {% if (states('sensor.uaqua_3').split(';')[6]=='1')  %}
    #                 Regulacja mocy: Rozruch
    #               {% elif (states('sensor.uaqua_3').split(';')[6]=='2')  %}
    #                  Regulacja mocy: 20%
    #               {% elif (states('sensor.uaqua_3').split(';')[6]=='3')  %}
    #                  Regulacja mocy: 40%
    #               {% elif (states('sensor.uaqua_3').split(';')[6]=='4')  %}
    #                  Regulacja mocy: 60%
    #               {% elif (states('sensor.uaqua_3').split(';')[6]=='5')  %}
    #                  Regulacja mocy: 80%
    #               {% elif (states('sensor.uaqua_3').split(';')[6]=='6')  %}
    #                  Regulacja mocy: 100%
    #               {% else %}
    #                  Regulacja mocy: OFF
    #               {% endif %}
    #           {% else %}
    #               {% if (states('sensor.uaqua_3').split(';')[6]=='0')  %}
    #                 Praca ON/OFF: Stan OFF
    #               {% else %}
    #                 Praca ON/OFF: Stan ON
    #               {% endif %}
    #           {% endif %}
    #         {% else %}
    #           off
    #         {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}        

    # uaqua_3_led_1:
    #   unique_id: 'microAQUA_3_LED_1_controller'
    #   friendly_name: LED 1
    #   icon_template: 'hass:led-on'      
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %} 
    #         {{states('sensor.uaqua_3').split(';')[13]}}
    #       {% else %} unknown {% endif %} 
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "%"
      

    # uaqua_3_led_2:
    #   unique_id: 'microAQUA_3_LED_2_controller'
    #   friendly_name: LED 2
    #   icon_template: 'hass:led-on'      
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}
    #         {{states('sensor.uaqua_3').split(';')[14]}}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %} 
    #   unit_of_measurement: "%"
      

    # uaqua_3_led_3:
    #   unique_id: 'microAQUA_3_LED_3_controller'
    #   friendly_name: LED 3
    #   icon_template: 'hass:led-on'      
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}
    #         {{states('sensor.uaqua_3').split(';')[15]}}
    #       {% else %} unknown {% endif %}  
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "%"
      

    # uaqua_3_led_4:
    #   unique_id: 'microAQUA_3_LED_4_controller'
    #   friendly_name: LED 4
    #   icon_template: 'hass:led-on'      
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}
    #         {{states('sensor.uaqua_3').split(';')[16]}}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   unit_of_measurement: "%"
        

    # uaqua_3_temp_alarms:
    #   unique_id: 'microAQUA_3_temp_alarms'
    #   friendly_name: Alarm Temp min/max
    #   icon_template: 'hass:thermometer-alert'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}
    #         {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(1))==1) %}
    #           {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(128))==128) %}
    #             ALARM Temp MIN wyciszony
    #           {% else %}
    #             ALARM Temp MIN
    #           {% endif %}
    #         {% elif (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(2))==2) %}
    #           {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(128))==128) %}
    #             ALARM Temp MAX wyciszony
    #           {% else %}
    #             ALARM Temp MIN
    #           {% endif %}
    #         {% else %}
    #           ---
    #         {% endif %}
    #       {% else %} unknown {% endif %}  
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}   

    # uaqua_3_ph_alarms:
    #   unique_id: 'microAQUA_3_pH_alarms'
    #   friendly_name: Alarm pH min/max
    #   icon_template: 'hass:alert'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}
    #         {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(4))==4) %}
    #           {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(128))==128) %}
    #             ALARM pH MIN wyciszony
    #           {% else %}
    #             ALARM pH MIN
    #           {% endif %}
    #         {% elif (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(8))==8) %}
    #           {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(128))==128) %}
    #             ALARM pH MAX wyciszony
    #           {% else %}
    #             ALARM pH MAX
    #           {% endif %}
    #         {% else %}
    #           ---
    #         {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}    
            
    # uaqua_3_acustic_alarm_status:
    #   unique_id: 'microAQUA_3 acoustic alarm'
    #   friendly_name: Alarm Dźwiękowy Status
    #   icon_template: 'hass:volume-high'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(127))!=0) %}
    #         {% if (((states('sensor.uaqua_3').split(';')[18]) |int |bitwise_and(128))==128) %}
    #           OFF
    #         {% else %}
    #           ON
    #         {% endif %}    
    #       {% else %}
    #         OFF
    #       {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %} 
    # uaqua_3_temp_alarm_min_value:
    #   unique_id: 'microAQUA_3_temp_alarm_min_value'
    #   friendly_name: Alarm Temp. min. value
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}  
    #         {% if (states('sensor.uaqua_3').split(';')[20]=='???')  %}
    #           --,- 
    #         {% else %} {{(states('sensor.uaqua_3').split(';')[20] | float / 10)}} +/-{{(states('sensor.uaqua_3').split(';')[22] | float / 10)}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #         {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   icon_template: 'hass:thermometer-alert' 
    #   unit_of_measurement: " °C"

    # uaqua_3_temp_alarm_max_value:
    #   unique_id: 'microAQUA_3_temp_alarm_max_value'
    #   friendly_name: Alarm Temp. max. value
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}  
    #         {% if (states('sensor.uaqua_3').split(';')[21]=='???')  %}
    #           --,- 
    #         {% else %} {{(states('sensor.uaqua_3').split(';')[21] | float / 10)}} +/-{{(states('sensor.uaqua_3').split(';')[22] | float / 10)}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #         {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   icon_template: 'hass:thermometer-alert' 
    #   unit_of_measurement: " °C"

    # uaqua_3_ph_alarm_min_value:
    #   unique_id: 'microAQUA_3_pH_alarm_min_value'
    #   friendly_name: Alarn pH min. value
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}  
    #         {% if (states('sensor.uaqua_3').split(';')[23]=='???')  %}
    #           -,-- 
    #         {% else %} {{(states('sensor.uaqua_3').split(';')[23] | float / 100)}} +/-{{(states('sensor.uaqua_3').split(';')[25] | float / 100)}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #         {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   icon_template: 'hass:alert' 
    #   unit_of_measurement: " pH"

    # uaqua_3_ph_alarm_max_value:
    #   unique_id: 'microAQUA_3_pH_alarm_max_value'
    #   friendly_name: Alarm pH max. value
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if ((states('sensor.uaqua_3_last_update')|int)<15 ) %}  
    #         {% if (states('sensor.uaqua_3').split(';')[24]=='???')  %}
    #           -,-- 
    #         {% else %} {{(states('sensor.uaqua_3').split(';')[24] | float / 100)}} +/-{{(states('sensor.uaqua_3').split(';')[25] | float / 100)}} {% endif %}
    #       {% else %} unknown {% endif %}
    #     {% else %}
    #         {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   icon_template: 'hass:alert' 
    #   unit_of_measurement: " pH"

    # uaqua_3_time_stamp:
    #   unique_id: 'microAQUA_3_data_update_time_stamp'
    #   friendly_name: Czas ostatniego pomiaru
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {{states('sensor.uaqua_3').split(';')[19] }}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
    #   icon_template: 'hass:clock' 
      
    # uaqua_3_last_update:
    #   unique_id: 'microAQUA_3_last_changed'
    #   friendly_name: ostatni update sensorow
    #   value_template: "{{ (as_timestamp(now())-as_timestamp(states.sensor.uaqua_3_time_stamp.last_updated))|float |round(0) }}"
      
    # uaqua_3_no_reg_time:
    #   unique_id: 'microAQUA_3_no_reg_time'
    #   friendly_name: Czas bez regulacji
    #   icon_template: 'hass:power-plug-off'
    #   value_template: >
    #     {% if (states('sensor.uaqua_3')!= 'unknown') %}
    #       {% if (states('sensor.uaqua_3').split(';')[17]== '0') %}
    #         --
    #       {% else %}
    #         {{states('sensor.uaqua_3').split(';')[17]}}min
    #       {% endif %}
    #     {% else %}
    #       {{states('sensor.uaqua_3')}}
    #     {% endif %}
#---------------------------------------------------#
#        END microAQUA 3'rd DEVICE SECTION          #
#---------------------------------------------------#
